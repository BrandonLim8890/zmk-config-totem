//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <200>;
    global-quick-tap;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

&lt { flavor = "hold-preferred"; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tvp {
            timeout-ms = <100>;
            key-positions = <11 12 13>;
            bindings = <&tog 0>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    behaviors {
        strong_homerow: strong_homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "STRONG_HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            quick-tap-ms = <185>;
            flavor = "tap-preferred";
        };

        weak_homerow: weak_homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK_HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            quick-tap-ms = <230>;
            require-prior-idle-ms = <125>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BASE";
            bindings = <
                    &kp Q                  &kp W                 &kp E                        &kp R                    &kp T             &kp Y      &kp U                    &kp I                         &kp O                 &kp P
                    &weak_homerow LCTRL A  &weak_homerow LALT S  &strong_homerow LEFT_META D  &strong_homerow LSHFT F  &kp G             &kp H      &strong_homerow RSHFT J  &strong_homerow RIGHT_META K  &weak_homerow RALT L  &weak_homerow RIGHT_CONTROL SEMICOLON
&mt LEFT_SHIFT ESC  &kp Z                  &kp X                 &kp C                        &kp V                    &kp B             &kp N      &kp M                    &kp COMMA                     &kp DOT               &kp FSLH                               &kp ENTER
                                                                 &mt LEFT_META LA(BACKSPACE)  &lt 1 BACKSPACE          &kp LEFT_SHIFT    &kp SPACE  &lt 2 TAB                &mt LEFT_META MINUS
            >;
        };

        nav_layer {
            label = "NAVI";
            bindings = <
              &kp N1  &kp N2     &kp N3     &kp N4                &kp N5                   &kp N6  &kp N7           &kp N8  &kp N9  &kp N0
              &trans  &kp EQUAL  &kp MINUS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET        &trans  &trans           &trans  &trans  &kp SQT
&kp CAPSLOCK  &trans  &trans     &trans     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans           &trans  &trans  &kp BACKSLASH  &trans
                                 &trans     &kp LEFT_SHIFT        &trans                   &trans  &kp RIGHT_SHIFT  &trans
            >;
        };

        layer_2 {
            label = "SHIFTED NAV";
            bindings = <
              &kp EXCLAMATION  &kp AT_SIGN     &kp HASH  &kp DOLLAR            &kp PERCENT              &kp CARET   &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
              &trans           &kp UNDERSCORE  &kp PLUS  &kp LEFT_BRACE        &kp RIGHT_BRACE          &kp LEFT    &kp DOWN           &kp UP_ARROW  &kp RIGHT             &kp DOUBLE_QUOTES
&kp CAPSLOCK  &trans           &trans          &trans    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans                &kp PIPE               &trans
                                               &trans    &kp LEFT_SHIFT        &trans                   &trans      &kp RIGHT_SHIFT    &trans
            >;
        };

        sim_layer {
            label = "SYM";
            bindings = <
              &kp GRAVE  &kp TILDE  &bt BT_CLR_ALL  &bt BT_SEL 0      &bt BT_SEL 1            &trans      &trans        &trans        &trans     &trans
              &kp TAB    &trans     &kp C_PREV      &kp C_PLAY_PAUSE  &kp C_NEXT              &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT  &trans
&kp CAPSLOCK  &trans     &trans     &trans          &kp C_BRI_DEC     &kp C_BRIGHTNESS_INC    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &trans     &trans  &trans
                                    &kp DELETE      &trans            &trans                  &trans      &trans        &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both_layers_pressed {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
